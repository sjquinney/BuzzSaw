package BuzzSaw::Parser::RFC3339; # -*-perl-*-
use strict;
use warnings;

our $VERSION = '@LCFG_VERSION@';

use Readonly;

use Moose;

with 'BuzzSaw::Parser', 'MooseX::Log::Log4perl';

# $Id$
# $Source:$
# $Revision$
# $HeadURL$
# $Date$

no Moose;
__PACKAGE__->meta->make_immutable;

# Regexp1. program and PID, followed by optional colon

Readonly my $rfc3339_re =>
    qr{
       (?<year>\d{4})                      # year
       -
       (?<month>\d{2})                     # month
       -
       (?<day>\d{2})                       # day
       T
       (?<hour>\d{2})                      # hour
       :
       (?<minute>\d{2})                    # minute
       :
       (?<second>\d{2})                    # second
       (?<nanosecond>\.\d+)?               # nanosecond
       (?<time_zone>Z|(?:[+-]\d{2}:\d{2})) # time_zone
      }xo;

Readonly my $prog_re1 =>
    qr{
       (?<program>[^:\[]+)
       \[
       (?<pid>\d+)
       (?:\]|(?=\s)) # closing bracket or next char is a space
       :?
      }xo;

# Regexp2. program followed by mandatory colon (no PID)

Readonly my $prog_re2 =>
    qr{
       (?<program>[^:]+)
       :
      }xo;

Readonly my $prog_full_re =>
    qr{
       ($prog_re1|$prog_re2)
       \s+
       (?<message>.+)
      }xo;

sub parse_line {
    my ( $self, $line ) = @_;

    # These field names match those used by the DateTime module

    my %results;

    my ( $time, $hostname, $message ) = split ' ', $line, 3;

    $results{hostname} = $hostname;
    $results{message}  = defined $message  ? $message  : q{};

    if ( $time =~ m{^$rfc3339_re$}o ) {
        %results = ( %results, %+ );

        if ( $results{time_zone} eq 'Z' ) {
            $results{time_zone} = 'UTC';
        } else {
            $results{time_zone} =~ s/://;
        }

        if ( defined $results{nanosecond} ) {
            $results{nanosecond} *= 1000000000;
        } else {
            $results{nanosecond} = 0;
        }

    } else {
        die "Failed to parse RFC3339 timestamp in line: $line\n";
    }

    # Attempt to acquire more information from the message

    if ( $results{message} =~ m{^$prog_full_re$}o ) {
        %results = ( %results, %+ );
    }

    return %results;
}


1;
__END__

=head1 NAME

BuzzSaw::Parser::RFC3339 - 

=head1 VERSION

This documentation refers to BuzzSaw::Parser::RFC3339 version @LCFG_VERSION@

=head1 USAGE

=head1 DESCRIPTION

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=over 4

=item

=back

=head1 CONFIGURATION

=head1 EXIT STATUS

=head1 INCOMPATIBILITIES

=head1 DIAGNOSTICS

=head1 DEPENDENCIES

This application requires

=head1 SEE ALSO

=head1 PLATFORMS

This is the list of platforms on which we have tested this
software. We expect this software to work on any Unix-like platform
which is supported by Perl.

@LCFG_PLATFORMS@

=head1 BUGS AND LIMITATIONS

Please report any bugs or problems (or praise!) to bugs@lcfg.org,
feedback and patches are also always very welcome.

=head1 AUTHOR

@LCFG_AUTHOR@

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2012 University of Edinburgh. All rights reserved.

This library is free software; you can redistribute it and/or modify
it under the terms of the GPL, version 2 or later.

=cut
